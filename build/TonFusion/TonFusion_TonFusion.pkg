{"name":"TonFusion","code":"","abi":"{\"name\":\"TonFusion\",\"types\":[{\"name\":\"DataSize\",\"header\":null,\"fields\":[{\"name\":\"cells\",\"type\":{\"kind\":\"simple\",\"type\":\"int\",\"optional\":false,\"format\":257}},{\"name\":\"bits\",\"type\":{\"kind\":\"simple\",\"type\":\"int\",\"optional\":false,\"format\":257}},{\"name\":\"refs\",\"type\":{\"kind\":\"simple\",\"type\":\"int\",\"optional\":false,\"format\":257}}]},{\"name\":\"SignedBundle\",\"header\":null,\"fields\":[{\"name\":\"signature\",\"type\":{\"kind\":\"simple\",\"type\":\"fixed-bytes\",\"optional\":false,\"format\":64}},{\"name\":\"signedData\",\"type\":{\"kind\":\"simple\",\"type\":\"slice\",\"optional\":false,\"format\":\"remainder\"}}]},{\"name\":\"StateInit\",\"header\":null,\"fields\":[{\"name\":\"code\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":false}},{\"name\":\"data\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":false}}]},{\"name\":\"Context\",\"header\":null,\"fields\":[{\"name\":\"bounceable\",\"type\":{\"kind\":\"simple\",\"type\":\"bool\",\"optional\":false}},{\"name\":\"sender\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"value\",\"type\":{\"kind\":\"simple\",\"type\":\"int\",\"optional\":false,\"format\":257}},{\"name\":\"raw\",\"type\":{\"kind\":\"simple\",\"type\":\"slice\",\"optional\":false}}]},{\"name\":\"SendParameters\",\"header\":null,\"fields\":[{\"name\":\"mode\",\"type\":{\"kind\":\"simple\",\"type\":\"int\",\"optional\":false,\"format\":257}},{\"name\":\"body\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}},{\"name\":\"code\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}},{\"name\":\"data\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}},{\"name\":\"value\",\"type\":{\"kind\":\"simple\",\"type\":\"int\",\"optional\":false,\"format\":257}},{\"name\":\"to\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"bounce\",\"type\":{\"kind\":\"simple\",\"type\":\"bool\",\"optional\":false}}]},{\"name\":\"MessageParameters\",\"header\":null,\"fields\":[{\"name\":\"mode\",\"type\":{\"kind\":\"simple\",\"type\":\"int\",\"optional\":false,\"format\":257}},{\"name\":\"body\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}},{\"name\":\"value\",\"type\":{\"kind\":\"simple\",\"type\":\"int\",\"optional\":false,\"format\":257}},{\"name\":\"to\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"bounce\",\"type\":{\"kind\":\"simple\",\"type\":\"bool\",\"optional\":false}}]},{\"name\":\"DeployParameters\",\"header\":null,\"fields\":[{\"name\":\"mode\",\"type\":{\"kind\":\"simple\",\"type\":\"int\",\"optional\":false,\"format\":257}},{\"name\":\"body\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}},{\"name\":\"value\",\"type\":{\"kind\":\"simple\",\"type\":\"int\",\"optional\":false,\"format\":257}},{\"name\":\"bounce\",\"type\":{\"kind\":\"simple\",\"type\":\"bool\",\"optional\":false}},{\"name\":\"init\",\"type\":{\"kind\":\"simple\",\"type\":\"StateInit\",\"optional\":false}}]},{\"name\":\"StdAddress\",\"header\":null,\"fields\":[{\"name\":\"workchain\",\"type\":{\"kind\":\"simple\",\"type\":\"int\",\"optional\":false,\"format\":8}},{\"name\":\"address\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":256}}]},{\"name\":\"VarAddress\",\"header\":null,\"fields\":[{\"name\":\"workchain\",\"type\":{\"kind\":\"simple\",\"type\":\"int\",\"optional\":false,\"format\":32}},{\"name\":\"address\",\"type\":{\"kind\":\"simple\",\"type\":\"slice\",\"optional\":false}}]},{\"name\":\"BasechainAddress\",\"header\":null,\"fields\":[{\"name\":\"hash\",\"type\":{\"kind\":\"simple\",\"type\":\"int\",\"optional\":true,\"format\":257}}]},{\"name\":\"Deploy\",\"header\":2490013878,\"fields\":[{\"name\":\"queryId\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}}]},{\"name\":\"DeployOk\",\"header\":2952335191,\"fields\":[{\"name\":\"queryId\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}}]},{\"name\":\"FactoryDeploy\",\"header\":1829761339,\"fields\":[{\"name\":\"queryId\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"cashback\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}}]},{\"name\":\"LockJetton\",\"header\":4111661023,\"fields\":[{\"name\":\"orderConfig\",\"type\":{\"kind\":\"simple\",\"type\":\"OrderConfig\",\"optional\":false}},{\"name\":\"jetton\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":false}},{\"name\":\"customPayload\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}}]},{\"name\":\"CreateOrder\",\"header\":1935855772,\"fields\":[{\"name\":\"orderConfig\",\"type\":{\"kind\":\"simple\",\"type\":\"Order\",\"optional\":false}},{\"name\":\"jetton\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":false}},{\"name\":\"customPayload\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}}]},{\"name\":\"CreateEVMToTONOrder\",\"header\":2335447074,\"fields\":[{\"name\":\"orderConfig\",\"type\":{\"kind\":\"simple\",\"type\":\"OrderConfig\",\"optional\":false}},{\"name\":\"evmContractAddress\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":false}},{\"name\":\"customPayload\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}}]},{\"name\":\"CreateTONToEVMOrder\",\"header\":1646500216,\"fields\":[{\"name\":\"orderConfig\",\"type\":{\"kind\":\"simple\",\"type\":\"OrderConfig\",\"optional\":false}},{\"name\":\"evmContractAddress\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":false}},{\"name\":\"customPayload\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}}]},{\"name\":\"PartialFill\",\"header\":1324731174,\"fields\":[{\"name\":\"orderHash\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":256}},{\"name\":\"secret\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":256}},{\"name\":\"fillAmount\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"resolver\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"customPayload\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}}]},{\"name\":\"CompletePartialFill\",\"header\":2054917277,\"fields\":[{\"name\":\"orderHash\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":256}},{\"name\":\"secret\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":256}}]},{\"name\":\"EVMCrossChainMessage\",\"header\":2592832621,\"fields\":[{\"name\":\"targetChainId\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"targetContract\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":false}},{\"name\":\"functionSelector\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"parameters\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":false}},{\"name\":\"gasLimit\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"value\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"customPayload\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}}]},{\"name\":\"EVMContractDeploy\",\"header\":1582251308,\"fields\":[{\"name\":\"targetChainId\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"contractBytecode\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":false}},{\"name\":\"constructorParams\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":false}},{\"name\":\"gasLimit\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"value\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"customPayload\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}}]},{\"name\":\"EVMBridgeConfirmation\",\"header\":523124044,\"fields\":[{\"name\":\"bridgeId\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"transactionHash\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":false}},{\"name\":\"blockNumber\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"confirmations\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"customPayload\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}}]},{\"name\":\"EVMOraclePriceUpdate\",\"header\":2359103007,\"fields\":[{\"name\":\"oracleId\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"tokenAddress\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"price\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"timestamp\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"customPayload\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}}]},{\"name\":\"EVMChainValidation\",\"header\":759058266,\"fields\":[{\"name\":\"chainId\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"blockNumber\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"gasPrice\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"customPayload\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}}]},{\"name\":\"DeployEscrow\",\"header\":1499400124,\"fields\":[{\"name\":\"chainId\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"targetAddress\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"customPayload\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}}]},{\"name\":\"EscrowDeployed\",\"header\":2078119902,\"fields\":[{\"name\":\"chainId\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"contractAddress\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"success\",\"type\":{\"kind\":\"simple\",\"type\":\"bool\",\"optional\":false}},{\"name\":\"customPayload\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}}]},{\"name\":\"RegisterRelayer\",\"header\":1935855774,\"fields\":[{\"name\":\"relayer\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"customPayload\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}}]},{\"name\":\"UpdateRelayerStats\",\"header\":1935855775,\"fields\":[{\"name\":\"relayer\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"success\",\"type\":{\"kind\":\"simple\",\"type\":\"bool\",\"optional\":false}},{\"name\":\"customPayload\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}}]},{\"name\":\"GetFund\",\"header\":1348689874,\"fields\":[{\"name\":\"secret\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":256}},{\"name\":\"hash\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":256}},{\"name\":\"customPayload\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}}]},{\"name\":\"Refund\",\"header\":3835567563,\"fields\":[{\"name\":\"hash\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":256}},{\"name\":\"customPayload\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}}]},{\"name\":\"RefundOrder\",\"header\":1935855773,\"fields\":[{\"name\":\"hash\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":256}},{\"name\":\"customPayload\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}}]},{\"name\":\"SetWhiteList\",\"header\":2844130808,\"fields\":[{\"name\":\"resolver\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"whitelistStatus\",\"type\":{\"kind\":\"simple\",\"type\":\"bool\",\"optional\":false}}]},{\"name\":\"JettonNotifyWithActionRequest\",\"header\":1935855772,\"fields\":[{\"name\":\"queryId\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"amount\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":\"coins\"}},{\"name\":\"sender\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"actionOpcode\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"actionPayload\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":false}}]},{\"name\":\"GetWalletAddress\",\"header\":801842850,\"fields\":[{\"name\":\"queryId\",\"type\":{\"kind\":\"simple\",\"type\":\"int\",\"optional\":false,\"format\":257}},{\"name\":\"owner\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}}]},{\"name\":\"CalculateOutput\",\"header\":null,\"fields\":[{\"name\":\"protocolFeeAmount\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"integratorFeeAmount\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"outputAmount\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}}]},{\"name\":\"PointAndTimeDelta\",\"header\":null,\"fields\":[{\"name\":\"rateBump\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":16}},{\"name\":\"timeDelta\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":16}}]},{\"name\":\"OrderConfig\",\"header\":null,\"fields\":[{\"name\":\"id\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"srcJettonAddress\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"senderPubKey\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"receiverPubKey\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"hashlock\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":256}},{\"name\":\"timelock\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"amount\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"finalized\",\"type\":{\"kind\":\"simple\",\"type\":\"bool\",\"optional\":false}},{\"name\":\"partialFills\",\"type\":{\"kind\":\"dict\",\"key\":\"uint\",\"keyFormat\":256,\"value\":\"uint\",\"valueFormat\":64}},{\"name\":\"totalFilled\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"direction\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":8}}]},{\"name\":\"Order\",\"header\":null,\"fields\":[{\"name\":\"id\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"srcJettonAddress\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"senderPubKey\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"hashlock\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":256}},{\"name\":\"timelock\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"amount\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"finalized\",\"type\":{\"kind\":\"simple\",\"type\":\"bool\",\"optional\":false}},{\"name\":\"partialFills\",\"type\":{\"kind\":\"dict\",\"key\":\"uint\",\"keyFormat\":256,\"value\":\"uint\",\"valueFormat\":64}},{\"name\":\"totalFilled\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"direction\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":8}}]},{\"name\":\"EscrowContract\",\"header\":null,\"fields\":[{\"name\":\"chainId\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"contractAddress\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"deployed\",\"type\":{\"kind\":\"simple\",\"type\":\"bool\",\"optional\":false}},{\"name\":\"totalOrders\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}}]},{\"name\":\"RelayerData\",\"header\":null,\"fields\":[{\"name\":\"address\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"whitelisted\",\"type\":{\"kind\":\"simple\",\"type\":\"bool\",\"optional\":false}},{\"name\":\"totalResolves\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"successRate\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":16}}]},{\"name\":\"JettonWalletData\",\"header\":null,\"fields\":[{\"name\":\"balance\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":\"coins\"}},{\"name\":\"ownerAddress\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"jettonMasterAddress\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"jettonWalletCode\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":false}}]},{\"name\":\"EVMChainConfig\",\"header\":null,\"fields\":[{\"name\":\"chainId\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"rpcEndpoint\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":false}},{\"name\":\"blockTime\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"gasLimit\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"isActive\",\"type\":{\"kind\":\"simple\",\"type\":\"bool\",\"optional\":false}},{\"name\":\"bridgeAddress\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":false}},{\"name\":\"oracleAddress\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":false}}]},{\"name\":\"EVMTransaction\",\"header\":null,\"fields\":[{\"name\":\"chainId\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"toContract\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":false}},{\"name\":\"functionSelector\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"parameters\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":false}},{\"name\":\"gasLimit\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"gasPrice\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"value\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"nonce\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"status\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":8}},{\"name\":\"transactionHash\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":false}},{\"name\":\"blockNumber\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"confirmations\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}}]},{\"name\":\"EVMBridgeData\",\"header\":null,\"fields\":[{\"name\":\"bridgeId\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"sourceChainId\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"targetChainId\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"bridgeContract\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"bridgeFee\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"minTransferAmount\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"maxTransferAmount\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"isActive\",\"type\":{\"kind\":\"simple\",\"type\":\"bool\",\"optional\":false}},{\"name\":\"lastUpdateTimestamp\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}}]},{\"name\":\"EVMOracleData\",\"header\":null,\"fields\":[{\"name\":\"oracleId\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"chainId\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"oracleContract\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"tokenAddress\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"priceDecimals\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":8}},{\"name\":\"heartbeatInterval\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"isActive\",\"type\":{\"kind\":\"simple\",\"type\":\"bool\",\"optional\":false}},{\"name\":\"lastPriceUpdate\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}}]},{\"name\":\"CrossChainMessage\",\"header\":null,\"fields\":[{\"name\":\"sourceChain\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"targetChain\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"orderHash\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":256}},{\"name\":\"amount\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"secret\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":256}},{\"name\":\"timestamp\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"nonce\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}}]},{\"name\":\"SendViaJettonTransfer\",\"header\":260734629,\"fields\":[{\"name\":\"queryId\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"amount\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":\"coins\"}},{\"name\":\"destination\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"responseDestination\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":true}},{\"name\":\"customPayload\",\"type\":{\"kind\":\"simple\",\"type\":\"cell\",\"optional\":true}},{\"name\":\"forwardTonAmount\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":\"coins\"}},{\"name\":\"forwardPayload\",\"type\":{\"kind\":\"simple\",\"type\":\"slice\",\"optional\":false,\"format\":\"remainder\"}}]},{\"name\":\"TonFusion$Data\",\"header\":null,\"fields\":[{\"name\":\"owner\",\"type\":{\"kind\":\"simple\",\"type\":\"address\",\"optional\":false}},{\"name\":\"escrowLock\",\"type\":{\"kind\":\"dict\",\"key\":\"uint\",\"keyFormat\":256,\"value\":\"OrderConfig\",\"valueFormat\":\"ref\"}},{\"name\":\"escrowOrder\",\"type\":{\"kind\":\"dict\",\"key\":\"uint\",\"keyFormat\":256,\"value\":\"Order\",\"valueFormat\":\"ref\"}},{\"name\":\"jettons\",\"type\":{\"kind\":\"dict\",\"key\":\"address\",\"value\":\"cell\",\"valueFormat\":\"ref\"}},{\"name\":\"jettonAccount\",\"type\":{\"kind\":\"dict\",\"key\":\"address\",\"value\":\"address\"}},{\"name\":\"whiteLists\",\"type\":{\"kind\":\"dict\",\"key\":\"address\",\"value\":\"bool\"}},{\"name\":\"relayers\",\"type\":{\"kind\":\"dict\",\"key\":\"address\",\"value\":\"RelayerData\",\"valueFormat\":\"ref\"}},{\"name\":\"escrowContracts\",\"type\":{\"kind\":\"dict\",\"key\":\"uint\",\"keyFormat\":32,\"value\":\"EscrowContract\",\"valueFormat\":\"ref\"}},{\"name\":\"totalOrders\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"totalVolume\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"totalResolves\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":32}},{\"name\":\"evmChainConfigs\",\"type\":{\"kind\":\"dict\",\"key\":\"uint\",\"keyFormat\":32,\"value\":\"EVMChainConfig\",\"valueFormat\":\"ref\"}},{\"name\":\"evmTransactions\",\"type\":{\"kind\":\"dict\",\"key\":\"uint\",\"keyFormat\":64,\"value\":\"EVMTransaction\",\"valueFormat\":\"ref\"}},{\"name\":\"evmBridges\",\"type\":{\"kind\":\"dict\",\"key\":\"uint\",\"keyFormat\":32,\"value\":\"EVMBridgeData\",\"valueFormat\":\"ref\"}},{\"name\":\"evmOracles\",\"type\":{\"kind\":\"dict\",\"key\":\"uint\",\"keyFormat\":32,\"value\":\"EVMOracleData\",\"valueFormat\":\"ref\"}},{\"name\":\"evmTransactionNonce\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}},{\"name\":\"evmBridgeFees\",\"type\":{\"kind\":\"simple\",\"type\":\"uint\",\"optional\":false,\"format\":64}}]}],\"receivers\":[{\"receiver\":\"internal\",\"message\":{\"kind\":\"empty\"}},{\"receiver\":\"internal\",\"message\":{\"kind\":\"typed\",\"type\":\"SetWhiteList\"}},{\"receiver\":\"internal\",\"message\":{\"kind\":\"typed\",\"type\":\"RegisterRelayer\"}},{\"receiver\":\"internal\",\"message\":{\"kind\":\"typed\",\"type\":\"JettonNotifyWithActionRequest\"}},{\"receiver\":\"internal\",\"message\":{\"kind\":\"typed\",\"type\":\"EVMCrossChainMessage\"}},{\"receiver\":\"internal\",\"message\":{\"kind\":\"typed\",\"type\":\"EVMContractDeploy\"}},{\"receiver\":\"internal\",\"message\":{\"kind\":\"typed\",\"type\":\"EVMBridgeConfirmation\"}},{\"receiver\":\"internal\",\"message\":{\"kind\":\"typed\",\"type\":\"EVMOraclePriceUpdate\"}},{\"receiver\":\"internal\",\"message\":{\"kind\":\"typed\",\"type\":\"EVMChainValidation\"}},{\"receiver\":\"internal\",\"message\":{\"kind\":\"typed\",\"type\":\"GetFund\"}},{\"receiver\":\"internal\",\"message\":{\"kind\":\"typed\",\"type\":\"Refund\"}},{\"receiver\":\"internal\",\"message\":{\"kind\":\"typed\",\"type\":\"RefundOrder\"}},{\"receiver\":\"internal\",\"message\":{\"kind\":\"typed\",\"type\":\"PartialFill\"}},{\"receiver\":\"internal\",\"message\":{\"kind\":\"typed\",\"type\":\"CompletePartialFill\"}},{\"receiver\":\"internal\",\"message\":{\"kind\":\"typed\",\"type\":\"DeployEscrow\"}},{\"receiver\":\"internal\",\"message\":{\"kind\":\"typed\",\"type\":\"UpdateRelayerStats\"}},{\"receiver\":\"internal\",\"message\":{\"kind\":\"typed\",\"type\":\"CreateEVMToTONOrder\"}},{\"receiver\":\"internal\",\"message\":{\"kind\":\"typed\",\"type\":\"CreateTONToEVMOrder\"}},{\"receiver\":\"internal\",\"message\":{\"kind\":\"typed\",\"type\":\"Deploy\"}}],\"getters\":[],\"errors\":{\"2\":{\"message\":\"Stack underflow\"},\"3\":{\"message\":\"Stack overflow\"},\"4\":{\"message\":\"Integer overflow\"},\"5\":{\"message\":\"Integer out of expected range\"},\"6\":{\"message\":\"Invalid opcode\"},\"7\":{\"message\":\"Type check error\"},\"8\":{\"message\":\"Cell overflow\"},\"9\":{\"message\":\"Cell underflow\"},\"10\":{\"message\":\"Dictionary error\"},\"11\":{\"message\":\"'Unknown' error\"},\"12\":{\"message\":\"Fatal error\"},\"13\":{\"message\":\"Out of gas error\"},\"14\":{\"message\":\"Virtualization error\"},\"32\":{\"message\":\"Action list is invalid\"},\"33\":{\"message\":\"Action list is too long\"},\"34\":{\"message\":\"Action is invalid or not supported\"},\"35\":{\"message\":\"Invalid source address in outbound message\"},\"36\":{\"message\":\"Invalid destination address in outbound message\"},\"37\":{\"message\":\"Not enough Toncoin\"},\"38\":{\"message\":\"Not enough extra currencies\"},\"39\":{\"message\":\"Outbound message does not fit into a cell after rewriting\"},\"40\":{\"message\":\"Cannot process a message\"},\"41\":{\"message\":\"Library reference is null\"},\"42\":{\"message\":\"Library change action error\"},\"43\":{\"message\":\"Exceeded maximum number of cells in the library or the maximum depth of the Merkle tree\"},\"50\":{\"message\":\"Account state size exceeded limits\"},\"128\":{\"message\":\"Null reference exception\"},\"129\":{\"message\":\"Invalid serialization prefix\"},\"130\":{\"message\":\"Invalid incoming message\"},\"131\":{\"message\":\"Constraints error\"},\"132\":{\"message\":\"Access denied\"},\"133\":{\"message\":\"Contract stopped\"},\"134\":{\"message\":\"Invalid argument\"},\"135\":{\"message\":\"Code of a contract was not found\"},\"136\":{\"message\":\"Invalid standard address\"},\"138\":{\"message\":\"Not a basechain address\"}},\"interfaces\":[\"org.ton.introspection.v0\",\"org.ton.abi.ipfs.v0\",\"org.ton.deploy.lazy.v0\"]}","init":{"kind":"direct","args":[],"prefix":{"bits":1,"value":0},"deployment":{"kind":"system-cell","system":null}},"sources":{"contracts/messages.tact":"","contracts/errors.tact":"","contracts/states.tact":"","contracts/consts.tact":"LyoqCiAqIEB0aXRsZSBUb25GdXNpb24gQ29uc3RhbnRzCiAqIEBhdXRob3IgVG9uRnVzaW9uIFRlYW0KICogQG5vdGljZSBNYXRoZW1hdGljYWwgY29uc3RhbnRzIGFuZCBiYXNlIHZhbHVlcyBmb3IgdGhlIFRvbkZ1c2lvbiBIVExDIHByb3RvY29sCiAqIEBkZXYgUHJvdmlkZXMgc3RhbmRhcmRpemVkIGJhc2UgdmFsdWVzIHVzZWQgdGhyb3VnaG91dCB0aGUgcHJvdG9jb2wKICogCiAqIEBjdXN0b206dmVyc2lvbiAxLjAuMAogKiAKICogQ29uc3RhbnQgQ2F0ZWdvcmllczoKICogLSBNYXRoZW1hdGljYWwgYmFzZSB2YWx1ZXMKICogLSBQcmVjaXNpb24gY29uc3RhbnRzCiAqIC0gU2NhbGluZyBmYWN0b3JzCiAqIC0gRVZNIGNoYWluIGNvbnN0YW50cwogKiAtIFZhbGlkYXRpb24gY29uc3RhbnRzCiAqLwoKLyoqCiAqIEBub3RpY2UgQmFzZSB2YWx1ZSBmb3IgMWUyICgxMDApCiAqIEBkZXYgVXNlZCBmb3IgcGVyY2VudGFnZSBjYWxjdWxhdGlvbnMgYW5kIHNjYWxpbmcKICogQGN1c3RvbTppbnRlcm5hbCBVc2VkIGludGVybmFsbHkgZm9yIG1hdGhlbWF0aWNhbCBvcGVyYXRpb25zCiAqLwpjb25zdCBCQVNFXzFFMjogSW50ID0gMTAwOwoKLyoqCiAqIEBub3RpY2UgQmFzZSB2YWx1ZSBmb3IgMWUzICgxMDAwKQogKiBAZGV2IFVzZWQgZm9yIGZlZSBjYWxjdWxhdGlvbnMgYW5kIHNjYWxpbmcKICogQGN1c3RvbTppbnRlcm5hbCBVc2VkIGludGVybmFsbHkgZm9yIG1hdGhlbWF0aWNhbCBvcGVyYXRpb25zCiAqLwpjb25zdCBCQVNFXzFFMzogSW50ID0gMTAwMDsKCi8qKgogKiBAbm90aWNlIEJhc2UgdmFsdWUgZm9yIDFlNSAoMTAwLDAwMCkKICogQGRldiBVc2VkIGZvciBwcmVjaXNpb24gY2FsY3VsYXRpb25zIGFuZCBsYXJnZSBudW1iZXIgc2NhbGluZwogKiBAY3VzdG9tOmludGVybmFsIFVzZWQgaW50ZXJuYWxseSBmb3IgbWF0aGVtYXRpY2FsIG9wZXJhdGlvbnMKICovCmNvbnN0IEJBU0VfMUU1OiBJbnQgPSAxMDBfMDAwOwoKLyoqCiAqIEBub3RpY2UgRVZNIENoYWluIElEcyBmb3Igc3VwcG9ydGVkIG5ldHdvcmtzCiAqIEBkZXYgVXNlZCBmb3IgY2hhaW4gdmFsaWRhdGlvbiBhbmQgcm91dGluZwogKiBAY3VzdG9tOnNlY3VyaXR5IE9ubHkgc3VwcG9ydGVkIGNoYWlucyBhcmUgYWxsb3dlZAogKi8KY29uc3QgRVZNX0NIQUlOX0VUSEVSRVVNOiBJbnQgPSAxOwpjb25zdCBFVk1fQ0hBSU5fUE9MWUdPTjogSW50ID0gMTM3Owpjb25zdCBFVk1fQ0hBSU5fQlNDOiBJbnQgPSA1NjsKY29uc3QgRVZNX0NIQUlOX0JBU0U6IEludCA9IDg0NTM7CmNvbnN0IEVWTV9DSEFJTl9BUkJJVFJVTTogSW50ID0gNDIxNjE7CgovKioKICogQG5vdGljZSBUT04gQ2hhaW4gSURzCiAqIEBkZXYgVXNlZCBmb3IgY2hhaW4gdmFsaWRhdGlvbiBhbmQgcm91dGluZwogKiBAY3VzdG9tOnNlY3VyaXR5IE9ubHkgc3VwcG9ydGVkIGNoYWlucyBhcmUgYWxsb3dlZAogKi8KY29uc3QgVE9OX0NIQUlOX01BSU5ORVQ6IEludCA9IC0zOwpjb25zdCBUT05fQ0hBSU5fVEVTVE5FVDogSW50ID0gLTIzOTsKCi8qKgogKiBAbm90aWNlIFN3YXAgZGlyZWN0aW9uIGNvbnN0YW50cwogKiBAZGV2IFVzZWQgZm9yIGRldGVybWluaW5nIHN3YXAgdHlwZSBhbmQgcm91dGluZwogKiBAY3VzdG9tOmludGVybmFsIFVzZWQgZm9yIG9yZGVyIGRpcmVjdGlvbiBkZXRlcm1pbmF0aW9uCiAqLwpjb25zdCBTV0FQX0RJUkVDVElPTl9UT05fVE9fRVZNOiBJbnQgPSAwOwpjb25zdCBTV0FQX0RJUkVDVElPTl9FVk1fVE9fVE9OOiBJbnQgPSAxOwpjb25zdCBTV0FQX0RJUkVDVElPTl9UT05fVE9fVE9OOiBJbnQgPSAyOwoKLyoqCiAqIEBub3RpY2UgRVZNIGludGVncmF0aW9uIGNvbnN0YW50cwogKiBAZGV2IFVzZWQgZm9yIGNyb3NzLWNoYWluIG1lc3NhZ2UgaGFuZGxpbmcgYW5kIHZhbGlkYXRpb24KICogQGN1c3RvbTppbnRlcm5hbCBVc2VkIGZvciBFVk0gY29udHJhY3QgaW50ZXJhY3Rpb25zCiAqLwpjb25zdCBFVk1fTUVTU0FHRV9PUENPREU6IEludCA9IDB4MTIzNDU2Nzg7CmNvbnN0IEVWTV9DT05UUkFDVF9DQUxMX0dBU19MSU1JVDogSW50ID0gMzAwMDAwOwpjb25zdCBFVk1fQ09OVFJBQ1RfREVQTE9ZX0dBU19MSU1JVDogSW50ID0gNTAwMDAwOwpjb25zdCBFVk1fQlJJREdFX1RJTUVPVVRfU0VDT05EUzogSW50ID0gMzYwMDsgLy8gMSBob3VyCmNvbnN0IEVWTV9DT05GSVJNQVRJT05fQkxPQ0tTOiBJbnQgPSAxMjsgLy8gU3RhbmRhcmQgY29uZmlybWF0aW9uIGJsb2NrcwoKLyoqCiAqIEBub3RpY2UgRVZNIGJyaWRnZSBhbmQgcmV0cnkgY29uc3RhbnRzCiAqIEBkZXYgVXNlZCBmb3IgYnJpZGdlIGZhaWx1cmUgaGFuZGxpbmcgYW5kIHJldHJ5IGxvZ2ljCiAqIEBjdXN0b206aW50ZXJuYWwgVXNlZCBmb3IgY3Jvc3MtY2hhaW4gcmVsaWFiaWxpdHkKICovCmNvbnN0IEVWTV9NQVhfUkVUUllfQVRURU1QVFM6IEludCA9IDM7CmNvbnN0IEVWTV9SRVRSWV9ERUxBWV9TRUNPTkRTOiBJbnQgPSAzMDA7IC8vIDUgbWludXRlcwpjb25zdCBFVk1fQlJJREdFX0ZFRV9CQVNFOiBJbnQgPSB0b24oIjAuMDEiKTsgLy8gQmFzZSBicmlkZ2UgZmVlCmNvbnN0IEVWTV9HQVNfUFJJQ0VfTVVMVElQTElFUjogSW50ID0gMTEwOyAvLyAxMTAlIG9mIGJhc2UgZ2FzIHByaWNlCgoK","contracts/utils.tact":"","contracts/ton_fusion.tact":""},"compiler":{"name":"tact","version":"1.6.13","parameters":"{\"entrypoint\":\"contracts/ton_fusion.tact\",\"options\":{\"debug\":false,\"external\":false}}"}}