# Cursor Rules for Foundry Tron Project

## Build Commands

- Use `forge build` to compile all contracts
- Use `forge build --force` to force recompilation
- Check build output in `out/` directory for compiled contracts

## Testing Commands

- Use `forge test` to run all tests
- Use `forge test -vvv` for verbose test output with detailed logs
- Use `forge test --gas-report` to generate gas usage reports
- For specific test files: `forge test --match-path test/ContractName.t.sol`
- For specific test functions: `forge test --match-test testFunctionName`

## Development Workflow

- Always build contracts before running tests: `forge build && forge test`
- Use `forge fmt` to format Solidity code
- Use `forge clean` to clean build artifacts
- Use `forge snapshot` to create gas usage snapshots

## Deployment Commands

- Use `forge script script/Deploy.s.sol --rpc-url tron_nile --broadcast` for testnet deployment
- Use `forge script script/Deploy.s.sol --rpc-url tron_mainnet --broadcast` for mainnet deployment
- Always verify deployments on Tronscan after deployment

## Automation Guidelines

- Use `--broadcast` flag for actual deployments
- Use `--verify` flag to verify contracts on block explorers
- Prefer non-interactive commands for CI/CD compatibility

## Project Structure

- Contracts are in `src/` directory
- Tests are in `test/` directory
- Deployment scripts are in `script/` directory
- Dependencies are in `lib/` directory
- Build output goes to `out/` directory

## Terminal Management & Recovery

### Prevention Strategies

- Use `tmux` for long-running development sessions to isolate terminal state
- Run TUI applications (like `k9s`, `htop`) in separate terminal tabs/windows
- Keep at least one clean terminal tab available for recovery
- Use `script debug.log` to record terminal sessions when debugging issues

### Quick Recovery Commands

- `tput cnorm` - Unhide cursor if it disappears
- `reset` - Reset terminal state and clear screen
- `clear` or `Ctrl+L` - Clear terminal screen
- `tmux attach` - Reattach to tmux session if using tmux

### Terminal Setup Recommendations

- Install and use `tmux` for session management: `sudo apt install tmux`
- Add terminal recovery aliases to shell config:
  ```bash
  alias fix='tput cnorm && reset && clear'
  alias panic='tmux new-session -d -s recovery && tmux attach-session -t recovery'
  ```
- Use alternative terminal emulators like Alacritty or Kitty for better state management
- Set `export TERM=xterm-256color` in shell configuration

### When Terminal Gets Stuck

1. Try `tput cnorm` first (unhide cursor)
2. If that doesn't work, run `reset` (resets terminal state)
3. Use `clear` or `Ctrl+L` to clean up the display
4. If still stuck, switch away and back with `Alt+Tab`
5. As last resort, open new terminal and use `tmux attach` if using tmux

## Foundry Specific Guidelines

- Use `forge install` to add dependencies (e.g., `forge install OpenZeppelin/openzeppelin-contracts`)
- Dependencies are tracked in `lib/` and should be committed to git
- Use `forge update` to update dependencies
- Configure networks in `foundry.toml` under `[rpc_endpoints]`
- Use `forge coverage` to generate test coverage reports
